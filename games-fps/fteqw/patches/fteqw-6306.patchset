From 69883d486dbe51b74f06c2bffcf3c0b3a2f9ac5e Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 12 Oct 2022 22:26:39 +0200
Subject: fteqw: compile fixes for fteqtv


diff --git a/fteqtv/qtv.h b/fteqtv/qtv.h
index 43f8763..fa72a02 100644
--- a/fteqtv/qtv.h
+++ b/fteqtv/qtv.h
@@ -157,7 +157,7 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 	#define ioctlsocket ioctl
 	#define closesocket close
 
-#elif defined(linux) || defined(ixemul) || defined(MACOSX) // I hope by adding MACOSX here it doesnt stop it from being natively built on macosx
+#elif defined(linux) || defined(ixemul) || defined(MACOSX) || defined(__HAIKU__) // I hope by adding MACOSX here it doesnt stop it from being natively built on macosx
 	#include <sys/time.h>
 	#include <sys/types.h>
 	#include <sys/socket.h>
@@ -287,13 +287,16 @@ size_t HMAC(hashfunc_t *hashfunc, unsigned char *digest, size_t maxdigestsize, c
 
 
 
-
+#ifndef __HAIKU__
 #ifndef __cplusplus
 typedef enum {false, true} qboolean;
 #else
 typedef int qboolean;
 extern "C" {
 #endif
+#else
+typedef bool qboolean;
+#endif
 
 typedef struct
 {
diff --git a/fteqtv/source.c b/fteqtv/source.c
index 23bf2d0..32179a9 100644
--- a/fteqtv/source.c
+++ b/fteqtv/source.c
@@ -745,6 +745,10 @@ qboolean Net_ConnectToDemoDirServer(sv_t* qtv, char *ip)
 	// TODO: also, what about MAC OS X?
 	Sys_Printf(qtv->cluster, "Windows support coming soon!\n");
 	return false;
+	#elif defined(__HAIKU__)
+	#warning TODO: properly implement this
+	Sys_Printf(qtv->cluster, "Haiku support coming soon!\n");
+	return false;
 	#else
 	{
 		DIR *dir;
-- 
2.37.3


From 52caaea83737f92fec25e4b95bb5ee381042628a Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 12 Oct 2022 22:32:04 +0200
Subject: fteqw: engine patches for haiku


diff --git a/engine/client/sys_sdl.c b/engine/client/sys_sdl.c
index df408e1..a32d2b0 100644
--- a/engine/client/sys_sdl.c
+++ b/engine/client/sys_sdl.c
@@ -521,7 +521,7 @@ int Sys_EnumerateFiles (const char *gpath, const char *match, int (QDECL *func)(
 	strcat(fullmatch, match);
 	return Sys_EnumerateFiles2(fullmatch, start, start, func, parm, spath);
 }
-#elif defined(linux) || defined(__unix__) || defined(__MACH__)
+#elif defined(linux) || defined(__unix__) || defined(__MACH__) || defined(__HAIKU__)
 #include <dirent.h>
 #include <errno.h>
 static int Sys_EnumerateFiles2 (const char *truepath, int apathofs, const char *match, int (*func)(const char *, qofs_t, time_t modtime, void *, searchpathfuncs_t *), void *parm, searchpathfuncs_t *spath)
@@ -623,7 +623,7 @@ static int Sys_EnumerateFiles2 (const char *truepath, int apathofs, const char *
 	closedir(dir);
 	return true;
 }
-int Sys_EnumerateFiles (const char *gpath, const char *match, int (*func)(const char *, qofs_t, time_t modtime, void *, searchpathfuncs_t *), void *parm, searchpathfuncs_t *spath)
+int Sys_EnumerateFiles (const char *gpath, const char *match, int (QDECL *func)(const char *fname, qofs_t fsize, time_t modtime, void *parm, searchpathfuncs_t *spath), void *parm, searchpathfuncs_t *spath)
 {
 	char apath[MAX_OSPATH];
 	char truepath[MAX_OSPATH];
@@ -836,7 +836,7 @@ int QDECL main(int argc, char **argv)
 #endif
 
 #ifndef WIN32
-	fcntl(0, F_SETFL, fcntl (0, F_GETFL, 0) | FNDELAY);
+	fcntl(0, F_SETFL, fcntl (0, F_GETFL, 0) | O_NDELAY);
 #endif
 
 	COM_InitArgv (parms.argc, parms.argv);
diff --git a/engine/server/sv_sys_unix.c b/engine/server/sv_sys_unix.c
index d817f6d..6efe0b6 100644
--- a/engine/server/sv_sys_unix.c
+++ b/engine/server/sv_sys_unix.c
@@ -291,7 +291,7 @@ void Sys_Error (const char *error, ...)
 	if (!noconinput)
 	{
 		tcsetattr(STDIN_FILENO, TCSADRAIN, &orig);
-		fcntl (STDIN_FILENO, F_SETFL, fcntl (STDIN_FILENO, F_GETFL, 0) & ~FNDELAY);
+		fcntl (STDIN_FILENO, F_SETFL, fcntl (STDIN_FILENO, F_GETFL, 0) & ~O_NDELAY);
 	}
 
 	//we used to fire sigsegv. this resulted in people reporting segfaults and not the error message that appeared above. resulting in wasted debugging.
@@ -593,7 +593,7 @@ void Sys_Quit (void)
 	if (!noconinput)
 	{
 		tcsetattr(STDIN_FILENO, TCSADRAIN, &orig);
-		fcntl (STDIN_FILENO, F_SETFL, fcntl (STDIN_FILENO, F_GETFL, 0) & ~FNDELAY);
+		fcntl (STDIN_FILENO, F_SETFL, fcntl (STDIN_FILENO, F_GETFL, 0) & ~O_NDELAY);
 	}
 	exit (0);		// appkit isn't running
 }
@@ -700,9 +700,9 @@ char *Sys_ConsoleInput (void)
 #if defined(__linux__)
 	{
 		int fl = fcntl (STDIN_FILENO, F_GETFL, 0);
-		if (!(fl & FNDELAY))
+		if (!(fl & O_NDELAY))
 		{
-			fcntl(STDIN_FILENO, F_SETFL, fl | FNDELAY);
+			fcntl(STDIN_FILENO, F_SETFL, fl | O_NDELAY);
 //			Sys_Printf(CON_WARNING "stdin flags became blocking - gdb bug?\n");
 		}
 	}
@@ -996,8 +996,8 @@ static int Sys_CheckChRoot(void)
 static void SigCont(int code)
 {	//lets us know when we regained foreground focus.
 	int fl = fcntl (STDIN_FILENO, F_GETFL, 0);
-	if (!(fl & FNDELAY))
-		fcntl(STDIN_FILENO, F_SETFL, fl | FNDELAY);
+	if (!(fl & O_NDELAY))
+		fcntl(STDIN_FILENO, F_SETFL, fl | O_NDELAY);
 	noconinput &= ~2;
 }
 #endif
-- 
2.37.3


From 6257440bc2291a6ecdd9958f64837e17eb2c3620 Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 12 Oct 2022 22:34:38 +0200
Subject: fteqw: botlib fixes for haiku


diff --git a/plugins/quake3/botlib/q_platform.h b/plugins/quake3/botlib/q_platform.h
index 75e9a14..c88e7a9 100644
--- a/plugins/quake3/botlib/q_platform.h
+++ b/plugins/quake3/botlib/q_platform.h
@@ -163,7 +163,7 @@ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 //================================================================= LINUX ===
 
-#if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(ANDROID) || defined(__ANDROID__)
+#if defined(__linux__) || defined(__FreeBSD_kernel__) || defined(ANDROID) || defined(__ANDROID__) || defined(__HAIKU__)
 
 #include <endian.h>
 
@@ -171,6 +171,8 @@ Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 #define OS_STRING "android"
 #elif defined(__linux__)
 #define OS_STRING "linux"
+#elif defined(__HAIKU__)
+#define OS_STRING "haiku"
 #else
 #define OS_STRING "kFreeBSD"
 #endif
-- 
2.37.3


From 3d4b95d5dd7f08cad1155b420c06a6a9f694f86a Mon Sep 17 00:00:00 2001
From: Victor Gamper <victor@wenzeslaus.de>
Date: Wed, 12 Oct 2022 22:37:09 +0200
Subject: fteqw: imgtool patches for Haiku


diff --git a/imgtool.c b/imgtool.c
index 0654a24..4a456ff 100644
--- a/imgtool.c
+++ b/imgtool.c
@@ -1848,7 +1848,11 @@ static void ImgTool_TreeScan(struct filelist_s *list, const char *basepath, cons
 				break;
 			if (*ent->d_name == '.')
 				continue;
+			#ifdef _DIRENT_HAVE_D_TYPE
 			else if (ent->d_type == DT_DIR)
+			#else
+			else if (sb.st_mode == S_IFDIR)
+			#endif
 			{
 				if (!subpath)
 					continue;
@@ -1858,7 +1862,11 @@ static void ImgTool_TreeScan(struct filelist_s *list, const char *basepath, cons
 					Q_snprintfz(file, sizeof(file), "%s", ent->d_name);
 				ImgTool_TreeScan(list, basepath, file);
 			}
+			#ifdef _DIRENT_HAVE_D_TYPE
 			else if (ent->d_type == DT_REG)
+			#else
+			else if (sb.st_mode == S_IFREG)
+			#endif
 			{
 				if (subpath && *subpath)
 					Q_snprintfz(file, sizeof(file), "%s/%s", subpath, ent->d_name);
-- 
2.37.3

